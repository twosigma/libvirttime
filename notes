functions that can take an absolute time:
	asmlinkage long sys_clock_adjtime(clockid_t which_clock, struct __kernel_timex __user *tx);
	asmlinkage long sys_clock_gettime(clockid_t which_clock, struct __kernel_timespec __user *tp);
	asmlinkage long sys_clock_nanosleep(clockid_t which_clock, int flags, const struct __kernel_timespec __user *rqtp, struct __kernel_timespec __user *rmtp);
	asmlinkage long sys_clock_settime(clockid_t which_clock, const struct __kernel_timespec __user *tp);

	sys_futex()

	extern int pthread_timedjoin_np (pthread_t __th, void **__thread_return, const struct timespec *__abstime);
	extern int pthread_mutex_timedlock (pthread_mutex_t *__restrict __mutex, const struct timespec *__restrict __abstime) __THROWNL __nonnull ((1, 2));
	extern int pthread_rwlock_timedrdlock (pthread_rwlock_t *__restrict __rwlock, const struct timespec *__restrict __abstime) __THROWNL __nonnull ((1, 2));
	extern int pthread_rwlock_timedwrlock (pthread_rwlock_t *__restrict __rwlock, const struct timespec *__restrict __abstime) __THROWNL __nonnull ((1, 2));
	extern int pthread_cond_timedwait (pthread_cond_t *__restrict __cond, pthread_mutex_t *__restrict __mutex, const struct timespec *__restrict __abstime)


	asmlinkage long sys_timer_gettime(timer_t timer_id, struct __kernel_itimerspec __user *setting);
	asmlinkage long sys_timer_settime(timer_t timer_id, int flags, const struct __kernel_itimerspec __user *new_setting, struct __kernel_itimerspec __user *old_setting);



functions that can take an absolute time, and specify a monotonic clock:
	asmlinkage long sys_clock_gettime(clockid_t which_clock, struct __kernel_timespec __user *tp);
	asmlinkage long sys_clock_nanosleep(clockid_t which_clock, int flags, const struct __kernel_timespec __user *rqtp, struct __kernel_timespec __user *rmtp);

	sys_futex() when not usign the FUTEX_CLOCK_REALTIME flag. (for FUTEX_WAIT, FUTEX_WAIT_BITSET, FUTEX_WAIT_REQUEUE_PI)

	(when pthread_cond_attr clock is monotonic_clock)
	extern int pthread_cond_timedwait (pthread_cond_t *__restrict __cond, pthread_mutex_t *__restrict __mutex, const struct timespec *__restrict __abstime)

	passing for now:
	asmlinkage long sys_timer_gettime(timer_t timer_id, struct __kernel_itimerspec __user *setting);
	asmlinkage long sys_timer_settime(timer_t timer_id, int flags, const struct __kernel_itimerspec __user *new_setting, struct __kernel_itimerspec __user *old_setting);
